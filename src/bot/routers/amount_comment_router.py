# -*- coding: utf-8 -*-
# FinFlow/src/bot/routers/amount_comment_router.py
"""
–®–∞–≥ 7  ‚Äì –≤–≤–æ–¥ —Å—É–º–º—ã
"""

from __future__ import annotations

import re
from typing import Final

from aiogram import Router, Bot
from aiogram.fsm.context import FSMContext
from aiogram.methods import EditMessageText
from aiogram.types import Message

from src.bot.state import OperationState
from src.bot.utils.legacy_messages import track_messages
from src.core.logger import configure_logger

router: Final = Router()
log = configure_logger(prefix="AMT/CMNT", color="yellow", level="INFO")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 7: —Å—É–º–º–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@router.message(OperationState.entering_operation_amount)
@track_messages
async def handle_amount(msg: Message, state: FSMContext, bot: Bot) -> None:
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –≤–≤–æ–¥: ¬´10 000,50¬ª, ¬´10000.5¬ª, ¬´10 000¬ª –∏ —Ç.–ø.
    –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é.
    """
    raw = msg.text or ""
    # –æ—Å—Ç–∞–≤–ª—è–µ–º —Ü–∏—Ñ—Ä—ã, ¬´.¬ª –∏ ¬´,¬ª
    cleaned = re.sub(r"[^\d.,\-]", "", raw).replace(",", ".")
    # —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Ç–æ—á–∫–∏ (10.000.50  ‚Üí  10000.50)
    parts = cleaned.split(".")
    if len(parts) > 2:
        cleaned = parts[0] + "." + "".join(parts[1:])
    try:
        amount = float(cleaned)
    except ValueError:
        await msg.answer(
            "‚úñÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n"
            "–ü—Ä–∏–º–µ—Ä: <code>1234.56</code> –∏–ª–∏ <code>1 234,56</code>"
        )
        return

    await state.update_data(operation_amount=amount)
    log.info(f"User {msg.from_user.id}: amount={amount}")

    # –ü–æ–ª—É—á–∞–µ–º message_id –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –∏ —Å–≤–æ–¥–∫–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    amount_message_id = data.get("amount_message_id")
    summary_message_id = data.get("summary_message_id")

    if amount_message_id:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Å—É–º–º—ã
        confirm_text = f"üí≤ –í–≤–µ–¥—ë–Ω–Ω–∞—è <b>—Å—É–º–º–∞</b>: {amount}"
        try:
            await bot.edit_message_text(
                chat_id=msg.chat.id,
                message_id=amount_message_id,
                text=confirm_text,
                parse_mode="HTML"
            )
        except Exception as e:
            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {amount_message_id}: {e}")
            await msg.answer(confirm_text, parse_mode="HTML")

    # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–≤–æ–¥–æ–º
    await msg.delete()

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    comment_message = await bot.send_message(
        chat_id=msg.chat.id,
        text="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∏–ª–∏ ¬´-¬ª –¥–ª—è –ø—É—Å—Ç–æ–≥–æ)."
    )
    await state.update_data(comment_message_id=comment_message.message_id)
    await state.set_state(OperationState.entering_operation_comment)